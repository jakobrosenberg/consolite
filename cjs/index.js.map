{"version":3,"sources":["../esm/index.mjs"],"names":["defaults","filter","level","levels","error","warn","debug","trace","noop","x","unique","v","i","a","indexOf","escapeRegExp","str","replace","escapeIfString","ExtendConsole","parent","options","prefix","Proxy","_levels","ownKeys","target","Object","keys","Reflect","getOwnPropertyDescriptor","key","value","enumerable","configurable","get","prop","set","logMethods","console","_prefix","defineProperties","_filter","_level","optsOrPrefix","hasOptions","unshift","createProxy","name","fn","cb","result","undefined","getNearest","accumulatedPrefixes","Array","isArray","delimiter","prefixes","forEach","push","_delimiter","val","root","extendedConsole","proxy","has","t","withinLevel","passesFilter","join","match","canBind","shouldPrint","formattedPrefixes","map","p","bind","Function","createLogger","Consolite"],"mappings":"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","sourcesContent":["// todo delimiter\n\n/**\n * @callback Filter\n * @param {string[]} prefixes\n */\n\n/**\n * @typedef {Object} ConsoliteOptions\n * @prop {Object<string, (...prefix)=>string>=} methods\n */\n\n/**\n * @typedef {PrefixFn|string} Prefix\n */\n\nconst defaults = {\n  filter: '',\n  level: 3,\n  levels: {\n    default: 3,\n    error: 1,\n    warn: 2,\n    debug: 4,\n    trace: 4,\n  },\n}\n\nconst noop = x => x\nconst unique = (v, i, a) => a.indexOf(v) === i\n\n// $& means the whole matched string\nconst escapeRegExp = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\nconst escapeIfString = str => (typeof str === 'string' ? escapeRegExp(str) : str)\n\nclass ExtendConsole {\n  _filter = null\n  _level = null\n  _levels = {}\n  _prefix = []\n  _delimiter = null\n  logMethods = /** @type {Console} */ ({})\n\n  /**\n   *\n   * @param {ExtendConsole} parent\n   * @param {ConsoliteOptions} options\n   * @param {Prefix[]} prefix\n   */\n  constructor(parent, options, prefix) {\n    this.parent = parent\n    this.options = options\n    if (!parent) this.logMethods = console\n    this._prefix = prefix\n    Object.defineProperties(this, {\n      _filter: { enumerable: false },\n      _level: { enumerable: false },\n      _levels: { enumerable: false },\n      _prefix: { enumerable: false },\n    })\n  }\n\n  /**\n   * @template {ConsoliteOptions}  T\n   * @template {ConsoliteOptions extends Object ? T['methods'] : ConsoliteOptions['methods']} Methods\n   * @param {T | Prefix} optsOrPrefix\n   * @param  {...Prefix} prefix\n   * @returns {ConsoliteLogger<this, Methods>}\n   */\n  createChild(optsOrPrefix, ...prefix) {\n    const hasOptions = typeof optsOrPrefix === 'object'\n    const options = hasOptions ? optsOrPrefix : {}\n    if (!hasOptions) prefix.unshift(optsOrPrefix)\n    return createProxy(this, options, prefix)\n  }\n\n  register(name, fn) {\n    this.logMethods[name] = fn\n  }\n\n  /**\n   * get prop from self or nearest ancestor\n   * @template T\n   * @param {(((T)=>{})|string|symbol)} cb\n   */\n  getNearest(cb) {\n    const fn = typeof cb === 'string' || typeof cb === 'symbol' ? x => x[cb] : cb\n    const result = fn(this)\n    return result !== null && result !== undefined\n      ? result\n      : this.parent && this.parent.getNearest(fn)\n  }\n\n  get prefix() {\n    /** @type {ExtendConsole} */\n    let parent = this\n    const accumulatedPrefixes = [...this._prefix]\n    while ((parent = parent.parent)) accumulatedPrefixes.unshift(...parent._prefix)\n    return accumulatedPrefixes\n  }\n\n  get formattedPrefixes() {\n    if (!this.delimiter) return this.prefix\n    else {\n      const prefixes = []\n      this.prefix.forEach(prefix => prefixes.push(prefix, this.delimiter))\n      return prefixes\n    }\n  }\n\n  get delimiter() {\n    return this.getNearest('_delimiter')\n  }\n\n  set delimiter(value) {\n    this._delimiter = value\n  }\n\n  set prefix(value) {\n    this._prefix = Array.isArray(value) ? value : [value]\n  }\n\n  get level() {\n    return this.getNearest('_level') ?? defaults.level\n  }\n  set level(val) {\n    this._level = val\n  }\n  get filter() {\n    return this.getNearest('_filter') ?? defaults.filter\n  }\n  set filter(val) {\n    this._filter = val\n  }\n  get __self() {\n    return this\n  }\n  get root() {\n    return this.parent?.root || this\n  }\n\n  levels = new Proxy(this._levels, {\n    // todo could be cleaner. Might not need proxy\n    ownKeys: target =>\n      [\n        ...Object.keys(defaults.levels),\n        ...Object.keys(this.parent?.levels || {}),\n        ...Reflect.ownKeys(target),\n      ].filter(unique),\n    getOwnPropertyDescriptor: (target, key) => ({\n      value: target[key],\n      enumerable: true,\n      configurable: true,\n    }),\n    get: (target, prop) =>\n      target[prop] ||\n      target.default ||\n      this.parent?.levels[prop] ||\n      this.parent?.levels.default ||\n      defaults.levels[prop] ||\n      defaults.levels.default,\n    set: (target, prop, value) => (target[prop] = value),\n  })\n}\n\n/**\n * @template {ConsoliteOptions} O\n * @template {ExtendConsole} P\n * @param {P} parent\n * @param {O | null} options\n * @param {(string|PrefixFn)[]} prefix\n * @returns {ConsoliteLogger<P, Console & O['methods']>}\n */\nexport const createProxy = (parent, options, prefix) => {\n  const extendedConsole = new ExtendConsole(parent, {}, prefix)\n  const proxy = /** @type {ConsoliteLogger<P, Console & O['methods']>} */ (\n    new Proxy(extendedConsole, {\n      get(target, prop) {\n        if (Reflect.has(target, prop)) return Reflect.get(target, prop)\n\n        const fn = target.getNearest(t => t.logMethods[prop])\n\n        if (fn) {\n          const withinLevel = prop => target.levels[prop] <= target.level\n          const passesFilter = () =>\n            typeof target.filter === 'function'\n              ? target.filter(target.prefix)\n              : target.prefix.join('').match(escapeIfString(target.filter))\n\n          const canBind = typeof fn === 'function'\n          const shouldPrint = withinLevel(prop) && passesFilter() && canBind\n          const prefixes = target.formattedPrefixes.map(p =>\n            typeof p === 'string' ? p : p(prop),\n          )\n\n          return shouldPrint ? fn.bind(console, ...prefixes) : noop\n        }\n      },\n      set(target, prop, value) {\n        if (Reflect.has(target, prop)) target[prop] = value\n        else if (value instanceof Function) target.logMethods[prop] = value\n        else return false\n        return true\n      },\n      ownKeys(target) {\n        const keys = [...Reflect.ownKeys(target), ...Reflect.ownKeys(target.logMethods)]\n        let parent = target\n        while ((parent = parent.parent)) keys.push(...Reflect.ownKeys(parent.logMethods))\n        return keys\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        if (Reflect.get(target, prop))\n          return Object.getOwnPropertyDescriptor(target, prop)\n\n        return (\n          parent.getNearest(t => Object.getOwnPropertyDescriptor(t.logMethods, prop)) ||\n          undefined\n        )\n      },\n    })\n  )\n\n  return proxy\n}\n\n/**\n * @callback PrefixFn\n * @param {string|symbol} method console method, eg. log, debug etc...\n */\n\n/**\n * @template {ExtendConsole} Parent\n * @template {ConsoliteOptions['methods']} Methods\n * @typedef {Parent & Methods} ConsoliteLogger\n **/\n\n/**\n * @template {ConsoliteOptions} O\n * @template {ExtendConsole} P\n * @param {O | Prefix} optsOrPrefix\n * @param {(string|PrefixFn)[]} prefix\n * @returns {ConsoliteLogger<P, Console & O['methods']>}\n */\nexport const createLogger = (optsOrPrefix, ...prefix) => {\n  const hasOptions = typeof optsOrPrefix === 'object'\n  const options = hasOptions ? optsOrPrefix : {}\n  if (!hasOptions) prefix.unshift(optsOrPrefix)\n  return createProxy(this, options, prefix)\n}\n\nexport class Consolite {\n  constructor(optsOrPrefix, ...prefix) {\n    return createLogger(optsOrPrefix, ...prefix)\n  }\n}\n"],"file":"index.js"}