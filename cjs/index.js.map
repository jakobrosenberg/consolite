{"version":3,"sources":["../esm/index.mjs"],"names":["defaults","filter","level","levels","error","warn","debug","trace","noop","x","unique","v","i","a","indexOf","escapeRegExp","str","replace","escapeIfString","ExtendConsole","console","Proxy","_levels","ownKeys","target","Object","keys","parent","Reflect","getOwnPropertyDescriptor","key","value","enumerable","configurable","get","prop","set","createLogger","prefix","push","name","fn","logMethods","_level","val","_filter","root","child","createProxy","extendedConsole","proxy","has","fnContext","withinLevel","passesFilter","join","match","canBind","shouldPrint","prefixes","map","p","bind","Consolite"],"mappings":"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","sourcesContent":["/**\n * @callback Filter\n * @param {string[]} prefixes\n */\n\n/**\n * @typedef {Object} Logger\n * @prop {createLogger} create Creates new logger.\n * @prop {createLogger} createChild Creates a child logger. Prefix will be inherited. Level and levels will be inherited if undefined.\n * @prop {createLogger} createParent Creates a parent logger. Prefix will be inherited. Level and levels will be inherited if undefined.\n * @prop {Object.<string, number>} levels\n * @prop {number} level\n * @prop {Filter|string|RegExp} filter\n * @prop {Logger} root\n * @prop {Logger} parent\n */\n\nconst defaults = {\n  filter: '',\n  level: 3,\n  levels: {\n    default: 3,\n    error: 1,\n    warn: 2,\n    debug: 4,\n    trace: 4,\n  },\n}\n\nconst noop = x => x\nconst unique = (v, i, a) => a.indexOf(v) === i\n\n// $& means the whole matched string\nconst escapeRegExp = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\nconst escapeIfString = str => (typeof str === 'string' ? escapeRegExp(str) : str)\n\nclass ExtendConsole {\n  prefix = []\n  _filter = null\n  _level = null\n  _levels = {}\n  parent = null\n  logMethods = console\n\n  constructor(...prefix) {\n    this.prefix.push(...prefix)\n  }\n\n  register(name, fn) {\n    this.logMethods[name] = fn\n  }\n\n  get level() {\n    return this._level ?? this.parent?.level ?? defaults.level\n  }\n  set level(val) {\n    this._level = val\n  }\n  get filter() {\n    return this._filter ?? this.parent?.filter ?? defaults.filter\n  }\n  set filter(val) {\n    this._filter = val\n  }\n  get __self() {\n    // logger = proxied object, logger.__self = original object\n    return this\n  }\n  get root() {\n    return this.parent?.root || this\n  }\n\n  levels = new Proxy(this._levels, {\n    ownKeys: target =>\n      [\n        ...Object.keys(defaults.levels),\n        ...Object.keys(this.parent?.levels || {}),\n        ...Reflect.ownKeys(target),\n      ].filter(unique),\n    getOwnPropertyDescriptor: (target, key) => ({\n      value: target[key],\n      enumerable: true,\n      configurable: true,\n    }),\n    get: (target, prop) =>\n      target[prop] ||\n      target.default ||\n      this.parent?.levels[prop] ||\n      this.parent?.levels.default ||\n      defaults.levels[prop] ||\n      defaults.levels.default,\n    set: (target, prop, value) => (target[prop] = value),\n  })\n\n  createChild(...prefix) {\n    const child = createLogger(...this.prefix, ...prefix)\n    child.parent = this\n    return child\n  }\n\n  createParent(...prefix) {\n    return createProxy(this, [...prefix, ...this.prefix])\n  }\n\n  create = createLogger\n}\n\n/**\n *\n * @param {ExtendConsole} parent\n * @param {(string|PrefixFn)[]} prefix\n * @returns {ConsoliteLogger}\n */\nexport const createProxy = (parent, prefix) => {\n  const extendedConsole = new ExtendConsole(...prefix)\n  const proxy = /** @type {ConsoliteLogger} */ (\n    new Proxy(extendedConsole, {\n      get(target, prop) {\n        if (Reflect.has(target, prop)) return Reflect.get(target, prop)\n\n        let fnContext = target\n        let fn = target.logMethods[prop]\n        while (!fn && fnContext) {\n          fnContext = fnContext.parent\n          fn = fnContext?.logMethods[prop]\n        }\n\n        if (fn) {\n          const withinLevel = prop => target.levels[prop] <= target.level\n          const passesFilter = () =>\n            typeof target.filter === 'function'\n              ? target.filter(prefix)\n              : prefix.join('').match(escapeIfString(target.filter))\n\n          const canBind = typeof fn === 'function'\n          const shouldPrint = withinLevel(prop) && passesFilter() && canBind\n          const prefixes = prefix.map(p => (typeof p === 'string' ? p : p(prop)))\n\n          return shouldPrint ? fn.bind(console, ...prefixes) : noop\n        }\n      },\n    })\n  )\n  return proxy\n}\n\n/**\n * @callback PrefixFn\n * @param {string|symbol} method console method, eg. log, debug etc...\n */\n\n/** @typedef {ExtendConsole & Console} ConsoliteLogger */\n\n/**\n * @param {(string|PrefixFn)[]} prefix\n * @returns {ConsoliteLogger}\n */\nexport const createLogger = (...prefix) => {\n  return createProxy(null, prefix)\n}\n\n/** @type {ConsoliteLogger} */\nexport class Consolite {\n  constructor(...prefix) {\n    return createLogger(...prefix)\n  }\n}\n"],"file":"index.js"}